name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20.x'

jobs:
  backend-build-and-test:
    runs-on: ubuntu-latest
    name: Backend Build & Test
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint backend
        run: npm run lint -w packages/backend

      - name: Type check backend
        run: npm run type-check -w packages/backend
        continue-on-error: true

      - name: Build backend
        run: npm run build -w packages/backend

      - name: Run backend tests
        run: npm run test -w packages/backend
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/b2b-test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-jwt-secret-key-for-ci-testing-only
          STRIPE_SECRET_KEY: sk_test_fake_key_for_testing
          FRONTEND_URL: http://localhost:3000

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          files: packages/backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  frontend-build-and-test:
    runs-on: ubuntu-latest
    name: Frontend Build & Test
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint frontend
        run: npm run lint -w packages/frontend
        continue-on-error: true

      - name: Build frontend
        run: npm run build -w packages/frontend
        continue-on-error: true

      - name: Run frontend tests
        run: npm run test -w packages/frontend
        continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-build:
    runs-on: ubuntu-latest
    name: Docker Build
    needs: [backend-build-and-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/backend/Dockerfile
          push: false
          tags: b2b-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
