// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/(customer)/[brand]/gate/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[brand]/gate">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/[brand]/gate/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(customer)/[brand]/proposals/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[brand]/proposals">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/[brand]/proposals/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(customer)/certificate/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/certificate/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/certificate/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(customer)/gate/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/gate">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/gate/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(customer)/proposals/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/proposals">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/proposals/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(customer)/vote/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/vote">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/vote/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(public)/auth/login/mobile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/login/mobile">> = Specific
  const handler = {} as typeof import("../../src/app/(public)/auth/login/mobile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(public)/auth/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/login">> = Specific
  const handler = {} as typeof import("../../src/app/(public)/auth/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(public)/auth/register/mobile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/register/mobile">> = Specific
  const handler = {} as typeof import("../../src/app/(public)/auth/register/mobile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(public)/auth/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/register">> = Specific
  const handler = {} as typeof import("../../src/app/(public)/auth/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(public)/auth/verify-email/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/verify-email">> = Specific
  const handler = {} as typeof import("../../src/app/(public)/auth/verify-email/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(public)/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/(public)/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/account/settings/assets/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/account/settings/assets">> = Specific
  const handler = {} as typeof import("../../src/app/brand/account/settings/assets/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/account/settings/billing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/account/settings/billing">> = Specific
  const handler = {} as typeof import("../../src/app/brand/account/settings/billing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/account/settings/css/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/account/settings/css">> = Specific
  const handler = {} as typeof import("../../src/app/brand/account/settings/css/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/account/settings/domains/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/account/settings/domains">> = Specific
  const handler = {} as typeof import("../../src/app/brand/account/settings/domains/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/account/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/account/settings">> = Specific
  const handler = {} as typeof import("../../src/app/brand/account/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/account/settings/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/account/settings/profile">> = Specific
  const handler = {} as typeof import("../../src/app/brand/account/settings/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/account/settings/theme/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/account/settings/theme">> = Specific
  const handler = {} as typeof import("../../src/app/brand/account/settings/theme/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/analytics/certificates/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/analytics/certificates">> = Specific
  const handler = {} as typeof import("../../src/app/brand/analytics/certificates/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/analytics/engagement/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/analytics/engagement">> = Specific
  const handler = {} as typeof import("../../src/app/brand/analytics/engagement/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/brand/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/analytics/products/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/analytics/products">> = Specific
  const handler = {} as typeof import("../../src/app/brand/analytics/products/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/analytics/transactions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/analytics/transactions">> = Specific
  const handler = {} as typeof import("../../src/app/brand/analytics/transactions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/analytics/votes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/analytics/votes">> = Specific
  const handler = {} as typeof import("../../src/app/brand/analytics/votes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/certificates/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/certificates">> = Specific
  const handler = {} as typeof import("../../src/app/brand/certificates/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/brand/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/integrations/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/integrations">> = Specific
  const handler = {} as typeof import("../../src/app/brand/integrations/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/products/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/products">> = Specific
  const handler = {} as typeof import("../../src/app/brand/products/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/voting/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brand/voting">> = Specific
  const handler = {} as typeof import("../../src/app/brand/voting/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/manufacturer/account/settings/billing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/manufacturer/account/settings/billing">> = Specific
  const handler = {} as typeof import("../../src/app/manufacturer/account/settings/billing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/manufacturer/account/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/manufacturer/account/settings">> = Specific
  const handler = {} as typeof import("../../src/app/manufacturer/account/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/manufacturer/account/settings/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/manufacturer/account/settings/profile">> = Specific
  const handler = {} as typeof import("../../src/app/manufacturer/account/settings/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/manufacturer/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/manufacturer/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/manufacturer/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/manufacturer/brands/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/manufacturer/brands">> = Specific
  const handler = {} as typeof import("../../src/app/manufacturer/brands/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/manufacturer/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/manufacturer/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/manufacturer/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/manufacturer/products/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/manufacturer/products">> = Specific
  const handler = {} as typeof import("../../src/app/manufacturer/products/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(public)/auth/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/auth/logout">> = Specific
  const handler = {} as typeof import("../../src/app/(public)/auth/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/(customer)/[brand]/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/[brand]">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/[brand]/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(customer)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(customer)/vote/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/vote">> = Specific
  const handler = {} as typeof import("../../src/app/(customer)/vote/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(lang)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/(lang)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(public)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/(public)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brand/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/brand">> = Specific
  const handler = {} as typeof import("../../src/app/brand/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/manufacturer/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/manufacturer">> = Specific
  const handler = {} as typeof import("../../src/app/manufacturer/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
